name: Test

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  schedule:
    # * is a special character in YAML so you have to quote this string
    # min hours day(month) month day(week)
    - cron: "0 0 * * 0"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  pytester:
    runs-on: ${{ matrix.os }}
    environment:
      name: test
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
        backend: ["local", "db"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e . -r tests/requirements.txt
      - name: Unit tests (local)
        if: matrix.backend == 'local'
        run: pytest -m "not mongo"
      - name: Unit tests (DB)
        if: matrix.backend == 'db'
        env:
          CACHIER_TEST_HOST: ${{ secrets.CACHIER_TEST_HOST  }}
          CACHIER_TEST_DB: ${{ secrets.CACHIER_TEST_DB  }}
          CACHIER_TEST_USERNAME: ${{ secrets.CACHIER_TEST_USERNAME  }}
          CACHIER_TEST_PASSWORD: ${{ secrets.CACHIER_TEST_PASSWORD  }}
          CACHIER_TEST_VS_LIVE_MONGO: ${{ secrets.CACHIER_TEST_VS_LIVE_MONGO  }}
        run: pytest -m "mongo"
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }} # required

  testing-guardian:
    runs-on: ubuntu-latest
    needs: pytester
    if: always()
    steps:
      - run: echo "${{ needs.pytester.result }}"
      - name: failing...
        if: needs.pytester.result == 'failure'
        run: exit 1
      - name: cancelled or skipped...
        if: contains(fromJSON('["cancelled", "skipped"]'), needs.pytester.result)
        timeout-minutes: 1
        run: sleep 90
