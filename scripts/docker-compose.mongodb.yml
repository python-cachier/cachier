# Docker Compose configuration for local MongoDB testing
# This file provides an alternative to the shell script approach

version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: cachier-test-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: cachier_test
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      # Optional: persist data between test runs
      # - cachier-mongo-data:/data/db
      # Optional: custom initialization scripts
      # - ./scripts/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - cachier-test

networks:
  cachier-test:
    driver: bridge
# Optional: volume for data persistence
# volumes:
#   cachier-mongo-data:

# Usage:
# 1. Start MongoDB: docker-compose -f scripts/docker-compose.mongodb.yml up -d
# 2. Run tests with environment variables:
#    CACHIER_TEST_HOST=localhost CACHIER_TEST_PORT=27017 CACHIER_TEST_VS_DOCKERIZED_MONGO=true pytest -m "mongo"
# 3. Stop MongoDB: docker-compose -f scripts/docker-compose.mongodb.yml down

# Alternative one-liner:
# docker-compose -f scripts/docker-compose.mongodb.yml run --rm -e CACHIER_TEST_HOST=localhost -e CACHIER_TEST_PORT=27017 -e CACHIER_TEST_VS_DOCKERIZED_MONGO=true test
